name: APK Build
run-name: APK v${{ inputs.tag_name }} / ${{ inputs.build_type }}

# Run the workflow when commits are pushed on main or when a PR is modified
on:
  workflow_dispatch:
    # We have 2 workflow user inputs: Choosing the tag name and what type of build
    # we want to perform (debug or release)
    inputs:
      tag_name:
        required: true
        type: string
        description: "Tag Name"
        default: "0.1.1"
      build_type:
        required: true
        type: string
        description: "debug or release"
        default: "release"

jobs:
  build:
    name: APK Build
    # Execute the CI on the course's runners
    runs-on: ubuntu-latest

    steps:
      # First step : Checkout the repository on the runner
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of Sonar analysis (if we use Sonar Later)

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "17"

      - name: Gradle cache
        uses: gradle/actions/setup-gradle@v3

      - name: Grant execute permission for gradlew
        run: |
          chmod +x ./gradlew

      # Here we make sure all hidden files are correctly imported for the build
      - name: Create signing files
        env:
          MAPS_API_KEY: ${{ secrets.MAPS_API_KEY }}
          WEATHER_API_KEY: ${{ secrets.WEATHER_API_KEY }}
          RADAR_API_KEY: ${{ secrets.RADAR_API_KEY }}
          GOOGLE_SERVICES_JSON: ${{ secrets.GOOGLE_SERVICES_JSON }}
          KEYSTORE: ${{ secrets.KEYSTORE }}
          KEYSTORE_PROPERTIES: ${{ secrets.KEYSTORE_PROPERTIES }}
        run: |
          echo -e "MAPS_API_KEY=$MAPS_API_KEY\nWEATHER_API_KEY=\"$WEATHER_API_KEY\"\nRADAR_API_KEY=\"$RADAR_API_KEY\"" > ./local.properties
          echo $GOOGLE_SERVICES_JSON | base64 -di > ./app/google-services.json
          echo $KEYSTORE | base64 -di > ./keystore.jks
          echo $KEYSTORE_PROPERTIES | base64 -di > ./keystore.properties

      # We build the APK
      # TODO: Check if debug mode, then run in debug mode
      - name: Building Release APK
        run: ./gradlew assembleRelease

      - name: Get release file apk path
        id: releaseApk
        run: echo "apkfile=$(find app/build/outputs/apk/release/*.apk)" >> $GITHUB_OUTPUT

      # We upload the APK to the artifacts
      - name: Upload Release Build to Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.build_type }}-apk-v${{ inputs.tag_name }}
          path: ${{ steps.releaseApk.outputs.apkfile }}
